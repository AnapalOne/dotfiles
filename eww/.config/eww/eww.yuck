(defwindow music-widget 
       :monitor 0 
       :geometry (geometry :x "20px"
                           :y "-20px"
                           :width "0px"
                           :height "0px"
                           :anchor "bottom left")
       :active false
       :hexpand true
       :stacking "fg"
       :wm-ignore true 

        (music_reveal)
)

(deflisten notifications_listen :initial '{"show": false, "content": ""}' './scr/music_notifications.sh')

(defwidget music []
    (box :class "music-widget-eww"
       :space-evenly false 
       :tooltip "Now playing.."
       :halign "start" 
       :orientation "horizontal"
       :windowtype "dock"
    {music != "" ? "üéµ ${music}" : ""} 
    )
)

(defwidget music_reveal []   
  (box :class "music-widget-eww"
       :orientation "h"
       :space-evenly false
    (revealer :reveal {notifications_listen.show} 
              :transition "slideright"
      (box
        (literal :valign "center" :content {notifications_listen.content}))
      )
  )
)



;(defwidget music-button []
;  (button :onclick "playerctl play-pause" 
;    "${music_data == "" ? "‚è∏" : music_data.status == "Playing" ? "‚è∏" : "‚ñ∂"}"))

;(deflisten music_data 
;  :initial `{"status": ""}`
;  `
;  playerctl          metadata --format '{ "status": "{{status}}", "artist": "{{artist}}", "title": "{{title}}"}' || echo '{"status": ""}';
;  # playerctl --follow metadata --format '{ "status": "{{status}}", "artist": "{{artist}}", "title": "{{title}}"}'
;  `)











(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "üîä"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label "Ô°ö"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "üíæ"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "wmctrl -s 0" 1)
    (button :onclick "wmctrl -s 1" 2)
    (button :onclick "wmctrl -s 2" 3)
    (button :onclick "wmctrl -s 3" 4)
    (button :onclick "wmctrl -s 4" 5)
    (button :onclick "wmctrl -s 5" 6)
    (button :onclick "wmctrl -s 6" 7)
    (button :onclick "wmctrl -s 7" 8)
    (button :onclick "wmctrl -s 8" 9)))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --ignore-player=firefox,vlc --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
